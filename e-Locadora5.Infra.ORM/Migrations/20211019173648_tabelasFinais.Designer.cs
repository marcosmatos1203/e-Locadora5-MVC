// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_Locadora5.Infra.ORM.ParceiroModule;

namespace e_Locadora5.Infra.ORM.Migrations
{
    [DbContext(typeof(LocadoraDbContext))]
    [Migration("20211019173648_tabelasFinais")]
    partial class tabelasFinais
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocacaoTaxasServicos", b =>
                {
                    b.Property<int>("TaxasServicosId")
                        .HasColumnType("int");

                    b.Property<int>("locacoesId")
                        .HasColumnType("int");

                    b.HasKey("TaxasServicosId", "locacoesId");

                    b.HasIndex("locacoesId");

                    b.ToTable("LocacaoTaxasServicos");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.ClientesModule.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("CPF")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Endereco")
                        .HasColumnType("VARCHAR(110)");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("RG")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Telefone")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.ToTable("TBCliente");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.CondutoresModule.Condutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("INT");

                    b.Property<string>("Cpf")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Endereco")
                        .HasColumnType("VARCHAR(110)");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("NumeroCNH")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Rg")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Telefone")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime>("ValidadeCNH")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("TBCondutor");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.CupomModule.Cupom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("DATE");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("INT");

                    b.Property<decimal>("ValorFixo")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("ValorMinimo")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<int>("ValorPercentual")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("TBCupom");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.FuncionarioModule.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("DATE");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("NumeroCpf")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("NUMERIC(38,17)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBFuncionario");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.GrupoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoria")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("planoDiarioValorDiario")
                        .HasColumnType("float");

                    b.Property<double>("planoDiarioValorKm")
                        .HasColumnType("float");

                    b.Property<double>("planoKmControladoQuantidadeKm")
                        .HasColumnType("float");

                    b.Property<double>("planoKmControladoValorDiario")
                        .HasColumnType("float");

                    b.Property<double>("planoKmControladoValorKm")
                        .HasColumnType("float");

                    b.Property<double>("planoKmLivreValorDiario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TBGrupoVeiculo");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("CondutorId")
                        .HasColumnType("int");

                    b.Property<int?>("CupomId")
                        .HasColumnType("int");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoVeiculoId")
                        .HasColumnType("int");

                    b.Property<int>("MarcadorCombustivel")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<decimal>("caucao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("dataDevolucao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("dataLocacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("emAberto")
                        .HasColumnType("bit");

                    b.Property<bool>("emailEnviado")
                        .HasColumnType("bit");

                    b.Property<string>("plano")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("quilometragemDevolucao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("seguroCliente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("seguroTerceiro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CondutorId");

                    b.HasIndex("CupomId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("GrupoVeiculoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("TBLocacao");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.ParceirosModule.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("TBParceiro");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.TaxasServicosModule.TaxasServicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("TaxaDiaria")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("TaxaFixa")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TBTaxasServicos");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.VeiculosModule.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("INT");

                    b.Property<int>("CapacidadeOcupantes")
                        .HasColumnType("INT");

                    b.Property<string>("Combustivel")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Cor")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Fabricante")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("GrupoVeiculoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("IMAGE");

                    b.Property<string>("Modelo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("NumeroChassi")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Placa")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("QtdLitrosTanque")
                        .HasColumnType("INT");

                    b.Property<int>("QtdPortas")
                        .HasColumnType("INT");

                    b.Property<decimal>("Quilometragem")
                        .HasColumnType("NUMERIC(38,17)");

                    b.Property<string>("TamanhoPortaMalas")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoVeiculoId");

                    b.ToTable("TBVeiculo");
                });

            modelBuilder.Entity("LocacaoTaxasServicos", b =>
                {
                    b.HasOne("e_Locadora5.Dominio.TaxasServicosModule.TaxasServicos", null)
                        .WithMany()
                        .HasForeignKey("TaxasServicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Locadora5.Dominio.LocacaoModule.Locacao", null)
                        .WithMany()
                        .HasForeignKey("locacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("e_Locadora5.Dominio.CondutoresModule.Condutor", b =>
                {
                    b.HasOne("e_Locadora5.Dominio.ClientesModule.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.CupomModule.Cupom", b =>
                {
                    b.HasOne("e_Locadora5.Dominio.ParceirosModule.Parceiro", "Parceiro")
                        .WithMany("Cupons")
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parceiro");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.LocacaoModule.Locacao", b =>
                {
                    b.HasOne("e_Locadora5.Dominio.ClientesModule.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_TBLocacao_TBCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("e_Locadora5.Dominio.CondutoresModule.Condutor", "Condutor")
                        .WithMany()
                        .HasForeignKey("CondutorId")
                        .HasConstraintName("FK_TBLocacao_TBCondutor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("e_Locadora5.Dominio.CupomModule.Cupom", "Cupom")
                        .WithMany("Locacoes")
                        .HasForeignKey("CupomId")
                        .HasConstraintName("FK_TBLocacao_TBCupom");

                    b.HasOne("e_Locadora5.Dominio.FuncionarioModule.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .HasConstraintName("FK_TBLocacao_TBFuncionario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("e_Locadora5.Dominio.GrupoVeiculo", "GrupoVeiculo")
                        .WithMany()
                        .HasForeignKey("GrupoVeiculoId")
                        .HasConstraintName("FK_TBLocacao_TBGrupoVeiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("e_Locadora5.Dominio.VeiculosModule.Veiculo", "Veiculo")
                        .WithMany("Locacoes")
                        .HasForeignKey("VeiculoId")
                        .HasConstraintName("FK_TBLocacao_TBVeiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Condutor");

                    b.Navigation("Cupom");

                    b.Navigation("Funcionario");

                    b.Navigation("GrupoVeiculo");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.VeiculosModule.Veiculo", b =>
                {
                    b.HasOne("e_Locadora5.Dominio.GrupoVeiculo", "GrupoVeiculo")
                        .WithMany()
                        .HasForeignKey("GrupoVeiculoId")
                        .HasConstraintName("FK_TBVeiculo_TBGrupoVeiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoVeiculo");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.CupomModule.Cupom", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.ParceirosModule.Parceiro", b =>
                {
                    b.Navigation("Cupons");
                });

            modelBuilder.Entity("e_Locadora5.Dominio.VeiculosModule.Veiculo", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
